dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
library(forecast)
library(tseries)
library(xts)
library(imputeTS)
library(dplyr)
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,2]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- x
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
onion <- dataset[,3]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- x
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
library(tidyverse)
library(forecast)
library(tseries)
library(xts)
library(imputeTS)
library(dplyr)
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,3]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- x
final_data[,3] <- x
final_data[,1] <- Week
onion <- dataset[,2]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,3] <- x
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,2]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,3] <- x
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,2]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- x
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,3]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,3] <- x
final_data[,3] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
onion <- dataset[,3]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,3] <- x
final_data[,2] <- Week
dataset = read.table("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Forecasting/final_forecasting_dataset.csv",sep = ",",header = TRUE)
dataset
onion <- dataset[,3]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,4]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,5]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,6]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,7]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,8]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
onion <- dataset[,9]
onion
col <- c("Week","Price")
Week <- seq(as.Date('2020-02-20'),as.Date('2020-04-29'),by = 7)
final_data<-data.frame(matrix(ncol = 2, nrow = 10))
colnames(final_data) <- col
final_data[,2] <- onion
final_data[,1] <- Week
ts_data <- xts(final_data[,-1], order.by=as.Date(final_data[,1], "%m/%d/%Y"))
ts_data <- ts(as.numeric(ts_data))
trn <- window(ts_data,end=c(8))
tst <- window(ts_data,start=c(8))
arima.model <- auto.arima(ts_data,allowdrift = T)
arima.model
arima.forecast <- forecast(arima.model,h=4,level=80)
arima.forecast
autoplot(arima.forecast)
holt <- holt(trn,h=4)
plot(holt)
lines(tst,lty = 3)
hw.model <- HoltWinters(ts_data,gamma = FALSE)
plot(hw.model,main="Original time series against the Fitted time series")
hw.model.predict <- predict(hw.model,n.ahead = 2)
hw.model.predict
round(hw.model.predict)
p_values = hw.model.predict
ts.plot(ts_data,hw.model.predict,col = "navyblue",gpars= list(lty=c(1:2), main = "Forecast from holt winter"))
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Chennai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Chennai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Chennai_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Delhi.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Delhi_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Kolkata.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Kolkata_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Mumbai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/pm_Mumbai_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Mumbai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/pm2.5/CO_Mumbai_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Mumbai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Mumbai_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Chennai.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Chennai_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Kolkata.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Kolkata_new.csv")
library(dplyr)
da <- read.csv("/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Delhi.csv")
df <- data.frame(da)
df$utc <- as.Date(df$utc)
un_date <- unique(as.Date(df$utc))
fd <- data.frame(matrix(ncol = 4, nrow = length(un_date)))
colnames(fd) <- c("city","date","parameter","value")
fd$date <- un_date
fd$city <- df$city[1]
fd$parameter <- df$parameter[1]
value <- df %>% group_by(df$utc) %>% summarise(mean(value))
fd$value <- rev(value$`mean(value)`)
fd
write.csv(fd,"/home/dheeraj/my_projects/my_project_env/practice/COVID19-Analysis-on-Vegetable_prices/Pollution_Gases/CO/CO_Delhi_new.csv")
